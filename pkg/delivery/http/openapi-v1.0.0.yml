openapi: 3.0.0
info:
  title: Midgard Public API
  version: 0.5.3
  contact:
    email: devs@thorchain.org
  description: The Midgard Public API queries THORChain and any chains linked via the Bifr√∂st and prepares information about the network to be readily available for public users. The API parses transaction event data from THORChain and stores them in a time-series database to make time-dependent queries easy. Midgard does not hold critical information. To interact with BEPSwap and Asgardex, users should query THORChain directly.
paths:
  "/v1/swagger.json":
    get:
      operationId: GetSwagger
      summary: Get Swagger
      description: Returns human and machine readable swagger/openapi specification.
      responses:
        "200":
          description: human and machine readable swagger/openapi specification
      tags:
        - Specification
  "/v1/doc":
    get:
      operationId: GetDocs
      summary: Get Documents
      description: Swagger/openapi 3.0 specification generated documents.
      responses:
        "200":
          description: swagger/openapi 3.0 spec generated docs
      tags:
        - Documentation
  "/v1/health":
    get:
      operationId: GetHealth
      summary: Get Health
      description: Returns an object containing the health response of the API.
      responses:
        "200":
          $ref: '#/components/responses/HealthResponse'
  "/v1/txs":
    get:
      operationId: GetTxDetails
      summary: Get details of a tx by address, asset or tx-id
      description: Return an array containing the event details
      parameters:
        - in: query
          name: address
          description: Address of sender or recipient of any in/out tx in event
          required: false
          schema:
            type: string
          example: tbnb1fj2lqj8dvr5pumfchc7ntlfqd2v6zdxqwjewf5
        - in: query
          name: txid
          description: ID of any in/out tx in event
          required: false
          schema:
            type: string
          example: 2F624637DE179665BA3322B864DB9F30001FD37B4E0D22A0B6ECE6A5B078DAB4
        - in: query
          name: asset
          description: Any asset used in event (CHAIN.SYMBOL)
          required: false
          schema:
            type: string
          example: BNB.TOMOB-1E1
        - in: query
          name: type
          description: One or more comma separated unique types of event
          required: false
          schema:
            type: string
          example: [swap, stake, unstake, add, refund, doubleSwap]
        - in: query
          name: offset
          description: pagination offset
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
        - in: query
          name: limit
          description: pagination limit
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
            maximum: 50
      responses:
        "200":
          $ref: '#/components/responses/TxsResponse'
  "/v1/stats":
    get:
      operationId: GetStats
      summary: Get Global Stats
      description: Returns an object containing global stats for all pools and all transactions.
      responses:
        "200":
          $ref: '#/components/responses/StatsResponse'
  "/v1/assets":
    get:
      operationId: GetAssetInfo
      summary: Get Asset Information
      description: Detailed information about a specific asset. Returns enough information to display a unique asset in various user interfaces, including latest price.
      parameters:
        - in: query
          name: asset
          description: One or more comma separated unique asset (CHAIN.SYMBOL)
          required: true
          schema:
            type: string
          example: [BNB.TOMOB-1E1, BNB.TCAN-014]
      responses:
        "400":
          $ref: '#/components/responses/GeneralErrorResponse'
        "200":
          $ref: '#/components/responses/AssetsDetailedResponse'
  "/v1/pools":
    get:
      operationId: GetPools
      summary: Get Asset Pools
      description: Returns an array containing all the assets supported on BEPSwap pools
      responses:
        "400":
          $ref: '#/components/responses/GeneralErrorResponse'
        "200":
          $ref: '#/components/responses/PoolsResponse'
  "/v1/pools/detail":
    get:
      operationId: GetPoolsDetails
      summary: Get Pools Details
      description: Returns an object containing all the pool details for that asset. 
      parameters:
        - in: query
          name: view
          description: Specifies the returning view
          schema:
            type: string
            enum: 
              - balances
              - simple
              - full
            default: full
        - in: query
          name: asset
          description: One or more comma separated unique asset (CHAIN.SYMBOL)
          required: true
          schema:
            type: string
          example: [BNB.TOMOB-1E1,BNB.TCAN-014]
      responses:
        "200":
          $ref: '#/components/responses/PoolsDetailedResponse'

  "/v1/stakers":
    get:
      operationId: GetStakersData
      summary: Get Stakers
      description: Returns an array containing the addresses for all stakers.
      responses:
        "200":
          "$ref": "#/components/responses/StakersResponse"

  "/v1/stakers/{address}":
    get:
      operationId: GetStakersAddressData
      summary: Get Staker Data
      description: Returns an array containing all the pools the staker is staking in.
      parameters:
        - in: path
          name: address
          description: Unique staker address
          required: true
          schema:
            type: string
          example: 'bnb1jxfh2g85q3v0tdq56fnevx6xcxtcnhtsmcu64m'
      responses:
        "200":
          $ref: '#/components/responses/StakersAddressDataResponse'

  "/v1/stakers/{address}/pools":
    get:
      operationId: GetStakersAddressAndAssetData
      summary: Get Staker Pool Data
      description: Returns an object containing staking data for the specified staker and pool.
      parameters:
        - in: path
          name: address
          description: Unique staker address
          required: true
          schema:
            type: string
          example: 'bnb1jxfh2g85q3v0tdq56fnevx6xcxtcnhtsmcu64m'
        - in: query
          name: asset
          description: One or more comma separated unique asset (CHAIN.SYMBOL)
          required: true
          schema:
            type: string
          example: [BNB.TOMOB-1E1,BNB.TCAN-014]
      responses:
        "200":
          $ref: '#/components/responses/StakersAssetDataResponse'
  "/v1/thorchain/pool_addresses":
    get:
      operationId: GetThorchainProxiedEndpoints
      summary: Get the Proxied Pool Addresses
      description: Returns a proxied endpoint for the pool_addresses endpoint from a local thornode
      responses:
        "200":
          $ref: '#/components/responses/ThorchainEndpointsResponse'
  "/v1/network":
    get:
      operationId: GetNetworkData
      summary: Get Network Data
      description: Returns an object containing Network data
      responses:
        "200":
          "$ref": "#/components/responses/NetworkResponse"
  "/v1/nodes":
    get:
      operationId: GetNodes
      summary: Get Node public keys
      description: Returns an object containing Node public keys
      responses:
        "200":
          "$ref": "#/components/responses/NodeKeyResponse"
  "/v1/thorchain/constants":
    get:
      operationId: GetThorchainProxiedConstants
      summary: Get the Proxied THORChain Constants
      description: Returns a proxied endpoint for the constants endpoint from a local thornode
      responses:
        "200":
          $ref: '#/components/responses/ThorchainConstantsResponse'
  "/v1/thorchain/lastblock":
    get:
      operationId: GetThorchainProxiedLastblock
      summary: Get the Proxied THORChain Lastblock
      description: Returns a proxied endpoint for the lastblock endpoint from a local thornode
      responses:
        "200":
          $ref: '#/components/responses/ThorchainLastblockResponse'
  "/v1/thorchain/queue":
    get:
      operationId: GetThorchainProxiedQueue
      summary: Get the Proxied THORChain Queue
      description: Returns a proxied endpoint for the queue endpoint from a local thornode
      responses:
        "200":
          $ref: '#/components/responses/ThorchainQueueResponse'
  "/v1/history/total_volume":
    get:
      operationId: GetTotalVolChanges
      summary: Get Total Volume Changes
      description: Returns total volume changes of all pools in specified interval
      parameters:
        - in: query
          name: interval
          description: Interval of calculations
          required: true
          schema:
            type: string
            enum: ["5min", "hour", "day", "week", "month", "year"]
        - in: query
          name: from
          description: Start time of the query as unix timestamp
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: to
          description: End time of the query as unix timestamp
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          $ref: '#/components/responses/TotalVolChangesResponse'
  "/v1/history/pools":
    get:
      operationId: GetPoolAggChanges
      summary: Get Pool Aggregated Changes
      description: Returns historical aggregated details of the specified pool.
      parameters:
        - in: query
          name: pool
          description: Pool asset name
          required: true
          schema:
            type: string
          example: BNB.TOMOB-1E1
        - in: query
          name: interval
          description: Interval of calculations
          required: true
          schema:
            type: string
            enum: ["5min", "hour", "day", "week", "month", "year"]
        - in: query
          name: from
          description: Start time of the query as unix timestamp
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: to
          description: End time of the query as unix timestamp
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          $ref: '#/components/responses/GetPoolAggChangesResponse'

  "/v1/pools/details/{pool}/earnings":
    get:
      operationId: GetEarningDetail
      summary: Get Pool Earning Detail
      description: Returns earning report and apy of the specified pool.
      parameters:
        - in: path
          name: pool
          description: Pool asset name
          required: true
          schema:
            type: string
          example: BNB.BNB
      responses:
        "200":
          $ref: '#/components/responses/GetPoolEarningDetailResponse'

components:
  responses:
    PoolsDetailedResponse:
      description: object containing pool data for that asset
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PoolDetail'

    StatsResponse:
      description: object containing global BEPSwap data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatsData'

    HealthResponse:
      description: Returns an health status of Midgard
      content:
        application/json:
          schema:
            type: object
            properties:
              database:
                type: boolean
              scannerHeight:
                type: integer
                format: int64
              catching_up:
                type: boolean

    TxsResponse:
      description: Returns an array of transactions
      content:
        application/json:
          schema:
            type: object
            properties:
              count:
                type: integer
                format: int64
              txs:
                type: array
                items:
                  $ref: '#/components/schemas/TxDetails'        

    StakersAddressDataResponse:
      description: array of all the pools the staker is staking in
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StakersAddressData'

    StakersResponse:
      description: array of all the stakers
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Stakers'

    StakersAssetDataResponse:
      description: object containing staking data for a specific staker and asset
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StakersAssetData'

    AssetsDetailedResponse:
      description: object containing detailed asset information
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AssetDetail'

    PoolsResponse:
      description: array of assets
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/asset'

    GeneralErrorResponse:
      description: error message
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ThorchainEndpointsResponse:
      description: Get Return an object for the proxied pools_addresses endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ThorchainEndpoints'

    NetworkResponse:
      description: Returns an object containing Network data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NetworkInfo'

    NodeKeyResponse:
      description: Returns an object containing Network data
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NodeKey'

    ThorchainConstantsResponse:
      description: Get Return an object for the proxied constants endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ThorchainConstants'

    ThorchainLastblockResponse:
      description: Get Return an object for the proxied lastblock endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ThorchainLastblock'

    ThorchainQueueResponse:
      description: Get Return an object for the proxied queue endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ThorchainQueue'

    TotalVolChangesResponse:
      description: Get Return an array of total volume changes.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TotalVolChanges'

    GetPoolAggChangesResponse:
      description: Get Return an array of pool changes.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PoolAggChanges'

    GetPoolEarningDetailResponse:
      description: Get Return an array of pool changes.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PoolEarningDetail'

  schemas:
    TxDetails:
      properties:
        pool:
          $ref: '#/components/schemas/asset'
        type:
          type: string
          enum: [swap, stake, unstake, rewards, add, pool, gas, refund, doubleSwap]
        status:
          type: string
          enum: [success, refund] 
        in:
          $ref: '#/components/schemas/tx'
        out:
          type: array
          items:
            $ref: '#/components/schemas/tx'
        date:
          type: integer
          format: int64
        gas:
          $ref: '#/components/schemas/gas'
        options:
          $ref: '#/components/schemas/option'
        height:
          type: string 
        events:
          $ref: '#/components/schemas/event'

    StatsData:
      type: object
      properties:
        dailyActiveUsers:
          type: string
          description: Daily active users (unique addresses interacting)
        monthlyActiveUsers:
          type: string
          description: Monthly active users
        totalUsers:
          type: string
          description: Total unique swappers & stakers
        dailyTx:
          type: string
          description: Daily transactions
        monthlyTx:
          type: string
          description: Monthly transactions
        totalTx:
          type: string
          description: Total transactions
        totalVolume24hr:
          type: string
          description: Total (in RUNE Value) of all assets swapped in 24hrs
        totalVolume:
          type: string
          description: Total (in RUNE Value) of all assets swapped since start.
        totalStaked:
          type: string
          description: Total staked (in RUNE Value).
        totalDepth:
          type: string
          description: Total RUNE balances
        totalEarned:
          type: string
          description: Total earned (in RUNE Value).
        poolCount:
          type: string
          description: Number of active pools
        totalAssetBuys:
          type: string
          description: Total buying transactions
        totalAssetSells:
          type: string
          description: Total selling transactions
        totalStakeTx:
          type: string
          description: Total staking transactions
        totalWithdrawTx:
          type: string
          description: Total withdrawing transactions

    StakersAddressData:
      type: object
      properties:
        poolsArray:
          type: array
          items:
            $ref: '#/components/schemas/asset'
        totalStaked:
          type: string
          description: Total staked (in RUNE) across all pools.
        totalEarned:
          type: string
          description: Total value of earnings (in RUNE) across all pools.
        totalROI:
          type: string
          description: Average of all pool ROIs.

    StakersAssetData:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        units:
          type: string
          description: Represents ownership of a pool.
        assetStaked:
          type: string
          description: Total of assets staked
        assetWithdrawn:
          type: string
          description: Total of assets withdrawn
        runeStaked:
          type: string
          description: Total of rune staked
        runeWithdrawn:
          type: string
          description: Total of rune withdrawn
        dateFirstStaked:
          type: integer
          format: int64
        heightLastStaked:
          type: integer
          format: int64
    Stakers:
      type: string
      description: Staker address
      example: tbnb1fj2lqj8dvr5pumfchc7ntlfqd2v6zdxqwjewf5

    PoolDetail:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        status:
          type: string
          enum: [bootstrapped, enabled, disabled]
        price:
          type: string
          description: Price of Asset (in RUNE).
        assetStakedTotal:
          type: string
          description: Total Asset staked
        runeStakedTotal:
          type: string
          description: Total RUNE staked
        poolStakedTotal:
          type: string
          description: Rune value staked Total
        assetDepth:
          type: string
          description: Total current Asset balance
        runeDepth:
          type: string
          description: Total current Rune balance
        poolDepth:
          type: string
          description: Total depth of both sides (in RUNE)
        poolUnits:
          type: string
          description: Total pool units outstanding
        sellVolume:
          type: string
          description: Total Asset sell volume (ASSET>RUNE) (in RUNE).
        buyVolume:
          type: string
          description: Total Asset buy volume (RUNE->ASSET) (in RUNE)
        poolVolume:
          type: string
          description: Two-way volume of all-time (in RUNE)
        poolVolume24hr:
          type: string
          description: Two-way volume in 24hrs (in RUNE)
        sellTxAverage:
          type: string
          description: Average Asset sell transaction size (ASSET>RUNE) (in RUNE)
        buyTxAverage:
          type: string
          description: Average Asset buy transaction size for (RUNE->ASSET) (in ASSET)
        poolTxAverage:
          type: string
          description: Average pool transaction
        sellSlipAverage:
          type: string
          description: Average trade slip for ASSET->RUNE in %
        buySlipAverage:
          type: string
          description: Average trade slip for RUNE->ASSET in %
        poolSlipAverage:
          type: string
          description: Average pool slip
        sellFeeAverage:
          type: string
          description: Average buy Asset fee size for ASSET->RUNE (in RUNE)
        buyFeeAverage:
          type: string
          description: Average sell Asset fee size for RUNE->ASSET (in ASSET)
        poolFeeAverage:
          type: string
          description: Average pool fee
        sellFeesTotal:
          type: string
          description: Total fees (in RUNE)
        buyFeesTotal:
          type: string
          description: Total fees (in Asset)
        poolFeesTotal:
          type: string
          description: Total fees
        sellAssetCount:
          type: string
          description: Number of ASSET->RUNE transactions
        buyAssetCount:
          type: string
          description: Number of RUNE->ASSET transactions
        swappingTxCount:
          type: string
          description: Number of swapping transactions in the pool (buys and sells)
        swappersCount:
          type: string
          description: Number of unique swappers interacting with pool
        stakeTxCount:
          type: string
          description: Number of stake transactions
        withdrawTxCount:
          type: string
          description: Number of withdraw transactions
        stakingTxCount:
          type: string
          description: Number of stake & withdraw transactions
        stakersCount:
          type: string
          description: Number of unique stakers
        assetROI:
          type: string
          description: Asset return on investment
        runeROI:
          type: string
          description: RUNE return on investment
        poolROI:
          type: string
          description: Pool ROI (average of RUNE and Asset ROI)
        poolROI12:
          type: string
          description: Pool ROI over 12 months
        assetEarned:
          type: string
          description: Amount of pool asset balance changed by fee, gas and assset donation
        runeEarned:
          type: string
          description: Amount of pool rune balance changed by fee,reward, deficit, gas and rune donation
        poolEarned:
          type: string
          description: (assetEarned * price) + runeEarned
        poolAPY:
          type: string
          description: (1 + (poolEarned/poolDepth)) ^ 12 -1

    AssetDetail:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        dateCreated:
          type: integer
          format: int64
        priceRune:
          type: string

    Error:
      required:
        - "error"
      type: object
      properties:
        error:
          type: string
    coins:
      type: array
      items:
        $ref: '#/components/schemas/coin'
    coin:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        amount:
          type: string
    asset:
      type: string
    tx:
      type: object
      properties:
        txID:
          type: string
        memo:
          type: string
        address:
          type: string
        coins:
          $ref: '#/components/schemas/coins'
    gas:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        amount:
          type: string
    option:
      type: object
      properties:
        priceTarget:
          type: string
        withdrawBasisPoints:
          type: string
        asymmetry:
          type: string
        reason:
          type: string
    event:
      type: object
      properties:
        fee:
          type: string
        stakeUnits:
          type: string
        slip:
          type: string

    ThorchainEndpoint:
      type: object
      properties:
        chain:
          type: string
        pub_key:
          type: string
        address:
          type: string

    ThorchainEndpoints:
      type: object
      properties:
        current:
          type: array
          items:
            $ref: '#/components/schemas/ThorchainEndpoint'

    BondMetrics:
      type: object
      properties:
        totalActiveBond:
          type: string
          description: Total bond of active nodes
        averageActiveBond:
          type: string
          description: Average bond of active nodes
        medianActiveBond:
          type: string
          description: Median bond of active nodes
        minimumActiveBond:
          type: string
          description: Minumum bond of active nodes
        maximumActiveBond:
          type: string
          description: Maxinum bond of active nodes
        totalStandbyBond:
          type: string
          description: Total bond of standby nodes
        averageStandbyBond:
          type: string
          description: Average bond of standby nodes
        medianStandbyBond:
          type: string
          description: Median bond of standby nodes
        minimumStandbyBond:
          type: string
          description: Minumum bond of standby nodes
        maximumStandbyBond:
          type: string
          description: Maximum bond of standby nodes
    BlockRewards:
      type: object
      properties:
        blockReward:
          type: string
        bondReward:
          type: string
        stakeReward:
          type: string
    NetworkInfo:
      type: object
      properties:
        bondMetrics:
          $ref: '#/components/schemas/BondMetrics'
        activeBonds:
          type: array
          description: Array of Active Bonds
          items:
            type: string
        standbyBonds:
          type: array
          description: Array of Standby Bonds
          items:
            type: string
        totalStaked:
          type: string
          description: Total Rune Staked in Pools
        activeNodeCount:
          type: integer
          description: Number of Active Nodes
        standbyNodeCount:
          type: integer
          description: Number of Standby Nodes
        totalReserve:
          type: string
          description: Total left in Reserve
        poolShareFactor:
          type: string
        blockRewards:
          $ref: '#/components/schemas/BlockRewards'
        bondingROI:
          type: string
        stakingROI:
          type: string
        nextChurnHeight:
          type: string
        poolActivationCountdown:
          type: integer
          format: int64
          description: The remaining time of pool activation (in blocks)
        liquidityAPY:
          type: string
          description: (1 + (stakeReward * blocksPerMonth/totalDepth of active pools)) ^ 12 -1
        bondingAPY:
          type: string
          description: (1 + (bondReward * blocksPerMonth/totalActiveBond)) ^ 12 -1

    NodeKey:
      type: object
      properties:
        secp256k1:
          type: string
          description: secp256k1 public key
        ed25519:
          type: string
          description: ed25519 public key

    ThorchainConstants:
        type: object
        properties:
          int_64_values:
            $ref: '#/components/schemas/ThorchainInt64Constants'
          bool_values:
            $ref: '#/components/schemas/ThorchainBooleanConstants'
          string_values:
            $ref: '#/components/schemas/ThorchainStringConstants'

    ThorchainInt64Constants:
        type: object
        properties:
          BadValidatorRate:
            type: integer
            format: int64
          BlocksPerYear:
            type: integer
            format: int64
          DesireValidatorSet:
            type: integer
            format: int64
          DoubleSignMaxAge:
            type: integer
            format: int64
          EmissionCurve:
            type: integer
            format: int64
          FailKeySignSlashPoints:
            type: integer
            format: int64
          FailKeygenSlashPoints:
            type: integer
            format: int64
          FundMigrationInterval:
            type: integer
            format: int64
          JailTimeKeygen:
            type: integer
            format: int64
          JailTimeKeysign:
            type: integer
            format: int64
          LackOfObservationPenalty:
            type: integer
            format: int64
          MinimumBondInRune:
            type: integer
            format: int64
          MinimumNodesForBFT:
            type: integer
            format: int64
          MinimumNodesForYggdrasil:
            type: integer
            format: int64
          NewPoolCycle:
            type: integer
            format: int64
          ObserveSlashPoints:
            type: integer
            format: int64
          OldValidatorRate:
            type: integer
            format: int64
          RotatePerBlockHeight:
            type: integer
            format: int64
          RotateRetryBlocks:
            type: integer
            format: int64
          SigningTransactionPeriod:
            type: integer
            format: int64
          StakeLockUpBlocks:
            type: integer
            format: int64
          TransactionFee:
            type: integer
            format: int64
          ValidatorRotateInNumBeforeFull:
            type: integer
            format: int64
          ValidatorRotateNumAfterFull:
            type: integer
            format: int64
          ValidatorRotateOutNumBeforeFull:
            type: integer
            format: int64
          WhiteListGasAsset:
            type: integer
            format: int64
          YggFundLimit:
            type: integer
            format: int64

    ThorchainBooleanConstants:
        type: object
        properties:
          StrictBondStakeRatio:
            type: boolean

    ThorchainStringConstants:
        type: object
        properties:
          DefaultPoolStatus:
            type: string

    ThorchainLastblock:
        type: object
        properties:
          chain:
            type: string
          lastobservedin:
            type: integer
            format: int64
          lastsignedout:
            type: integer
            format: int64
          thorchain:
            type: integer
            format: int64

    ThorchainQueue:
      type: object
      properties:
        swap:
          type: integer
          format: int64
        outbound:
          type: integer
          format: int64

    TotalVolChanges:
      type: object
      properties:
        time:
          type: integer
          format: int64
          description: Determining end of current time bucket in unix timestamp
        buyVolume:
          type: string
          description: Sum of "rune_amount" of buy swap events
        sellVolume:
          type: string
          description: Sum of "rune_amount" of sell swap events
        totalVolume:
          type: string
          description: buyVolume + sellVolume

    PoolAggChanges:
      type: object
      properties:
        time:
          type: integer
          format: int64
          description: Determining end of current time bucket in unix timestamp
        assetChanges:
          type: string
          description: Total changes in asset depth at this time bucket
        assetDepth:
          type: string
          description: Depth of asset at the end of current time bucket
        assetStaked:
          type: string
          description: Total asset staked
        assetWithdrawn:
          type: string
          description: Total asset withdrawn
        buyCount:
          type: integer
          format: int64
          description: Count of buy swaps
        buyVolume:
          type: string
          description: Sum of "rune_amount" of buy swap events
        runeChanges:
          type: string
          description: Total changes in rune depth at this time bucket
        runeDepth:
          type: string
          description: Depth of rune at the end of current time bucket
        runeStaked:
          type: string
          description: Total rune staked
        runeWithdrawn:
          type: string
          description: Total rune withdrawn
        sellCount:
          type: integer
          format: int64
          description: Count of sell swaps
        sellVolume:
          type: string
          description: Sum of "rune_amount" of sell swap events
        price:
          type: string
          description: Asset price in rune at the end of current time bucket
        poolVolume:
          type: string
          description: buyVolume + sellVolume
        unitsChanges:
          type: string
          description: Total changes in pool units (stakes/withdraws)
        reward:
          type: string
          description: Sum of "rewards" events in rune
        gasUsed:
          type: string
          description: Total amount of asset used as gas for network transactions (e.g. BNB.BNB, ETH.ETH)
        gasReplenished:
          type: string
          description: Total amount of rune, paid by the network to neutralize "gasUsed" changes
        stakeCount:
          type: integer
          format: int64
          description: Count of stake events
        withdrawCount:
          type: integer
          format: int64
          description: Count of withdraw events


    PoolEarningDetail:
      type: object
      properties:
        pool:
          type: string
          description: pool name
        totalReward:
          type: string
          description: sum of rewards in reward event
        totalPoolDeficit:
          type: string
          description: sum of pool deficit in reward event
        totalGasPaid:
          type: string
          description: sum of gas paid from asset of this pool
        totalGasReimbursed:
          type: string
          description: sum of gas reimbursed to rune of this pool
        totalBuyFee:
          type: string
          description: sum of buy fee in rune
        totalSellFee:
          type: string
          description: sum of sell fee in rune
        totalPoolFee:
          type: string
          description: sum of pool sell fee in rune (sellFee+buyFee)
        totalAssetDonation:
            type: string
            description: sum of asset donated to the pool by add event
        totalRuneDonation:
          type: string
          description: sum of rune donated to the pool by add event
        totalPoolDonation:
          type: string
          description: sum of donation to this pool (totalAssetDonation*price + totalRuneDonation)
        totalPoolEarning:
          type: string
          description: sum of pool Earning (totalPoolDonation+totalPoolFee + totalReward + totalPoolDeficit + totalGasReimbursed - (totalGasPaid * price))
        lastMonthActiveDays:
          type: string
          description: number of days that pool was enabled in past 30 days
        lastMonthReward:
          type: string
          description: sum of rewards in reward event in past 30 days
        lastMonthPoolDeficit:
          type: string
          description: sum of pool deficit in reward event in past 30 days
        lastMonthGasPaid:
          type: string
          description: sum of gas paid from asset of this pool in past 30 days
        lastMonthGasReimbursed:
          type: string
          description: sum of gas reimbursed to rune of this pool in past 30 days
        lastMonthBuyFee:
          type: string
          description: sum of buy fee in rune in past 30 days
        lastMonthSellFee:
          type: string
          description: sum of sell fee in rune in past 30 days
        lastMonthPoolFee:
          type: string
          description: sum of pool sell fee in rune in past 30 days (lastMonthBuyFee+lastMonthSellFee)
        lastMonthAssetDonation:
          type: string
          description: sum of asset donated to the pool by add event in past 30 days
        lastMonthRuneDonation:
          type: string
          description: sum of rune donated to the pool by add event in past 30 days
        lastMonthPoolDonation:
            type: string
            description: sum of donation to this pool in past 30 days (lastMonthAssetDonation*price + lastMonthRuneDonation)
        lastMonthPoolEarning:
          type: string
          description: sum of pool Earning in past 30 days (lastMonthPoolDonation + lastMonthPoolFee + lastMonthReward + lastMonthPoolDeficit + lastMonthGasReimbursed - (lastMonthGasPaid * price))
        poolDepth:
          type: string
          description: pool depth (2 * rune depth)
        periodicRate:
          type: string
          description: lastMonthPoolEarning/poolDepth (lastMonthPoolEarning may extrapolate if pool was active less than 30 days)
        price:
          type: string
          description: pool price in rune
        poolAPY:
          type: string
          description: (1 + periodicRate ) ^ 12 -1

servers:
  - url: http://127.0.0.1:8080
  - url: https://127.0.0.1:8080
